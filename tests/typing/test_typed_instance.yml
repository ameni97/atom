- case: typed-no-annotations
  parametrized:
    - member: Typed
      member_instance: Typed(int)
      member_type: atom.typed.Typed[Union[builtins.int, None]]
      member_value_type: Union[builtins.int*, None]
    - member: Typed
      member_instance: Typed(int, ())
      member_type: atom.typed.Typed[builtins.int]
      member_value_type: builtins.int*
    - member: Typed
      member_instance: Typed(io.StringIO, None, dict(initial_value=str(1)))
      member_type: atom.typed.Typed[io.StringIO]
      member_value_type: io.StringIO*
    - member: Typed
      member_instance: Typed(io.StringIO, kwargs=dict(initial_value=str(1)))
      member_type: atom.typed.Typed[io.StringIO]
      member_value_type: io.StringIO*
    - member: Typed
      member_instance: Typed(io.StringIO, None, None, g)
      member_type: atom.typed.Typed[io.StringIO]
      member_value_type: io.StringIO*
    - member: Typed
      member_instance: Typed(io.StringIO, factory=g)
      member_type: atom.typed.Typed[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardTyped
      member_instance: ForwardTyped(resolver)
      member_type: atom.typed.ForwardTyped[Union[io.StringIO, None]]
      member_value_type: Union[io.StringIO*, None]
    - member: ForwardTyped
      member_instance: ForwardTyped(resolver, ())
      member_type: atom.typed.ForwardTyped[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardTyped
      member_instance: ForwardTyped(resolver, None, dict(initial_value=str(1)))
      member_type: atom.typed.ForwardTyped[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardTyped
      member_instance: ForwardTyped(resolver, kwargs=dict(initial_value=str(1)))
      member_type: atom.typed.ForwardTyped[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardTyped
      member_instance: ForwardTyped(resolver, None, None, g)
      member_type: atom.typed.ForwardTyped[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardTyped
      member_instance: ForwardTyped(resolver, factory=g)
      member_type: atom.typed.ForwardTyped[io.StringIO]
      member_value_type: io.StringIO*
  main: |
    import io
    from typing import Type
    from atom.api import Atom, {{ member }}

    def resolver() -> Type[io.StringIO]:
      return io.StringIO

    def g() -> io.StringIO:
      return io.StringIO()

    class A(Atom):
      m = {{ member_instance }}

    reveal_type(A.m)  # N: Revealed type is "{{ member_type }}"
    reveal_type(A().m)  # N: Revealed type is "{{ member_value_type }}"


- case: instance-no-annotations
  parametrized:
    - member: Instance
      member_instance: Instance(int)
      member_type: atom.instance.Instance[Union[builtins.int, None]]
      member_value_type: Union[builtins.int*, None]
    - member: Instance
      member_instance: Instance((int,))
      member_type: atom.instance.Instance[Union[builtins.int, None]]
      member_value_type: Union[builtins.int*, None]
    - member: Instance
      member_instance: Instance((int, float))
      member_type: atom.instance.Instance[Union[builtins.float, None]]
      member_value_type: Union[builtins.float*, None]
    - member: Instance
      member_instance: Instance((int, float, str))
      member_type: atom.instance.Instance[Union[builtins.float, builtins.str, None]]
      member_value_type: Union[builtins.float*, builtins.str*, None]
    - member: Instance
      member_instance: Instance(int, ())
      member_type: atom.instance.Instance[builtins.int]
      member_value_type: builtins.int*
    - member: Instance
      member_instance: Instance((int,), ())
      member_type: atom.instance.Instance[builtins.int]
      member_value_type: builtins.int*
    - member: Instance
      member_instance: Instance((int, float), ())
      member_type: atom.instance.Instance[builtins.float]
      member_value_type: builtins.float*
    - member: Instance
      member_instance: Instance((int, float, str), ())
      member_type: atom.instance.Instance[Union[builtins.float, builtins.str]]
      member_value_type: Union[builtins.float*, builtins.str*]
    - member: Instance
      member_instance: Instance(io.StringIO, None, dict(initial_value=str(1)))
      member_type: atom.instance.Instance[io.StringIO]
      member_value_type: io.StringIO*
    - member: Instance
      member_instance: Instance((io.StringIO,), None, dict(initial_value=str(1)))
      member_type: atom.instance.Instance[io.StringIO]
      member_value_type: io.StringIO*
    - member: Instance
      member_instance: Instance(io.StringIO, kwargs=dict(initial_value=str(1)))
      member_type: atom.instance.Instance[io.StringIO]
      member_value_type: io.StringIO*
    - member: Instance
      member_instance: Instance((io.StringIO,), kwargs=dict(initial_value=str(1)))
      member_type: atom.instance.Instance[io.StringIO]
      member_value_type: io.StringIO*
    - member: Instance
      member_instance: Instance((io.StringIO, str), kwargs=dict(initial_value=str(1)))
      member_type: atom.instance.Instance[Union[io.StringIO, builtins.str]]
      member_value_type: Union[io.StringIO*, builtins.str*]
    - member: Instance
      member_instance: Instance((io.StringIO, str, bytes), kwargs=dict(initial_value=str(1)))
      member_type: atom.instance.Instance[Union[io.StringIO, builtins.str, builtins.bytes]]
      member_value_type: Union[io.StringIO*, builtins.str*, builtins.bytes*]
    - member: Instance
      member_instance: Instance(io.StringIO, None, None, g)
      member_type: atom.instance.Instance[io.StringIO]
      member_value_type: io.StringIO*
    - member: Instance
      member_instance: Instance((io.StringIO,), None, None, g)
      member_type: atom.instance.Instance[io.StringIO]
      member_value_type: io.StringIO*
    - member: Instance
      member_instance: Instance((io.StringIO, str), None, None, g)
      member_type: atom.instance.Instance[Union[io.StringIO, builtins.str]]
      member_value_type: Union[io.StringIO, builtins.str]
    - member: Instance
      member_instance: Instance((io.StringIO, str, bytes), None, None, g)
      member_type: atom.instance.Instance[Union[io.StringIO, builtins.str, builtins.bytes]]
      member_value_type: Union[io.StringIO, builtins.str, builtins.bytes]
    - member: Instance
      member_instance: Instance(io.StringIO, factory=g)
      member_type: atom.instance.Instance[io.StringIO]
      member_value_type: io.StringIO*
    - member: Instance
      member_instance: Instance((io.StringIO,), factory=g)
      member_type: atom.instance.Instance[io.StringIO]
      member_value_type: io.StringIO*
    - member: Instance
      member_instance: Instance((io.StringIO, str), factory=g)
      member_type: atom.instance.Instance[Union[io.StringIO, builtins.str]]
      member_value_type: Union[io.StringIO, builtins.str]
    - member: Instance
      member_instance: Instance((io.StringIO, str, bytes), factory=g)
      member_type: atom.instance.Instance[Union[io.StringIO, builtins.str, builtins.bytes]]
      member_value_type: Union[io.StringIO, builtins.str, builtins.bytes]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver)
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, None]]
      member_value_type: Union[io.StringIO*, None]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver1)
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, None]]
      member_value_type: Union[io.StringIO*, None]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver2)
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str, None]]
      member_value_type: Union[io.StringIO*, builtins.str*, None]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver3)
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str, builtins.bytes, None]]
      member_value_type: Union[io.StringIO*, builtins.str*, builtins.bytes*, None]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver, ())
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver1, ())
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver2, ())
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str]]
      member_value_type: Union[io.StringIO*, builtins.str*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver3, ())
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str, builtins.bytes]]
      member_value_type: Union[io.StringIO*, builtins.str*, builtins.bytes*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver, None, dict(initial_value=str(1)))
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver1, None, dict(initial_value=str(1)))
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver2, None, dict(initial_value=str(1)))
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str]]
      member_value_type: Union[io.StringIO*, builtins.str*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver3, None, dict(initial_value=str(1)))
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str, builtins.bytes]]
      member_value_type: Union[io.StringIO*, builtins.str*, builtins.bytes*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver, kwargs=dict(initial_value=str(1)))
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver1, kwargs=dict(initial_value=str(1)))
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver2, kwargs=dict(initial_value=str(1)))
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str]]
      member_value_type: Union[io.StringIO*, builtins.str*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver3, kwargs=dict(initial_value=str(1)))
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str, builtins.bytes]]
      member_value_type: Union[io.StringIO*, builtins.str*, builtins.bytes*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver, None, None, g)
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver1, None, None, g)
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver2, None, None, g)
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str]]
      member_value_type: Union[io.StringIO*, builtins.str*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver3, None, None, g)
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str, builtins.bytes]]
      member_value_type: Union[io.StringIO*, builtins.str*, builtins.bytes*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver, factory=g)
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver1, factory=g)
      member_type: atom.instance.ForwardInstance[io.StringIO]
      member_value_type: io.StringIO*
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver2, factory=g)
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str]]
      member_value_type: Union[io.StringIO*, builtins.str*]
    - member: ForwardInstance
      member_instance: ForwardInstance(resolver3, factory=g)
      member_type: atom.instance.ForwardInstance[Union[io.StringIO, builtins.str, builtins.bytes]]
      member_value_type: Union[io.StringIO*, builtins.str*, builtins.bytes*]
  main: |
    import io
    from typing import Tuple, Type
    from atom.api import Atom, {{ member }}

    def resolver() -> Type[io.StringIO]:
      return io.StringIO

    def resolver1() -> Tuple[Type[io.StringIO]]:
      return (io.StringIO,)

    def resolver2() -> Tuple[Type[io.StringIO], Type[str]]:
      return (io.StringIO, str)

    def resolver3() -> Tuple[Type[io.StringIO], Type[str], Type[bytes]]:
      return (io.StringIO, str, bytes)

    def g() -> io.StringIO:
      return io.StringIO()


    class A(Atom):
      m = {{ member_instance }}

    reveal_type(A.m)  # N: Revealed type is "{{ member_type }}"
    reveal_type(A().m)  # N: Revealed type is "{{ member_value_type }}"
